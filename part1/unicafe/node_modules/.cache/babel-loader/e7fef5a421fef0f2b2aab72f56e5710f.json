{"ast":null,"code":"var _jsxFileName = \"/Users/jeanbravo/Dev/Bootcampmidudev/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Title = props => /*#__PURE__*/_jsxDEV(\"h1\", {\n  children: props.name\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 26\n}, this);\n\n_c = Title;\n\nconst setValue = (func, newValue) => () => {\n  func(newValue);\n};\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: setValue(props.func, props.value + 1),\n    children: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Button;\n\nconst Statistic = props => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Statistic;\n\nconst Statistics = props => {\n  const {\n    good,\n    neutral,\n    bad\n  } = props;\n  const all = good + neutral + bad;\n\n  if (all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedbacks for now!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(Statistic, {\n        name: \"good\",\n        value: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        name: \"neutral\",\n        value: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        name: \"bad\",\n        value: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        name: \"all\",\n        value: all\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        name: \"avg\",\n        value: (good - bad) / all\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        name: \"positive %\",\n        value: good / all * 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_c4 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      name: \"give feedbacks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: \"good\",\n      func: setGood,\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: \"neutral\",\n      func: setNeutral,\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: \"bad\",\n      func: setBad,\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      name: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Statistic\");\n$RefreshReg$(_c4, \"Statistics\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/Users/jeanbravo/Dev/Bootcampmidudev/part1/src/App.js"],"names":["React","useState","Title","props","name","setValue","func","newValue","Button","value","Statistic","Statistics","good","neutral","bad","all","App","setGood","setNeutral","setBad"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Title = (props) => <h1>{props.name}</h1>\n\nconst setValue = (func, newValue) =>() =>{\n  func(newValue)\n}\n\nconst Button = (props) => {\n  return(\n  <button onClick={setValue(props.func, props.value+1)}>\n    {props.name}\n  </button>\n  )\n}\n\nconst Statistic = (props) => {\n  return(\n    <tr>\n      <td>{props.name}</td> <td>{props.value}</td>\n    </tr>\n    \n  )\n}\n\nconst Statistics = (props) => {\n  const{good, neutral, bad} = props\n  const all = good + neutral + bad\n  if(all === 0){\n    return(\n      <p>No feedbacks for now!</p>\n    )\n  }return(\n    <>\n    <table>\n    <Statistic name=\"good\" value={good}/>\n    <Statistic name=\"neutral\" value={neutral}/>\n    <Statistic name=\"bad\" value={bad}/>\n    <Statistic name=\"all\" value={all}/>\n    <Statistic name=\"avg\" value={(good - bad) / all}/>\n    <Statistic name=\"positive %\" value={(good / all) * 100}/>\n    </table>\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <Title name=\"give feedbacks\"/>\n      <Button name=\"good\" func={setGood} value={good}/>\n      <Button name=\"neutral\" func={setNeutral} value={neutral}/>\n      <Button name=\"bad\" func={setBad} value={bad}/>\n      <Title name=\"statistics\"/>\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}